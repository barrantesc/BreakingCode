{"version":3,"sources":["utils/auth.js","components/header.js","pages/about.js","assets/banner.png","components/SingleCard.js","pages/game.js","components/icon.js","utils/footerLinks.js","components/footer.js","utils/mutations.js","pages/login.js","pages/signup.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","src","alt","Auth","loggedIn","href","onClick","event","preventDefault","logout","About","class","singleCard","card","handleChoice","flipped","disabled","data","console","log","map","info","pair_id","content","cardContent","cardImages","matched","Game","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","setData","shuffleCards","shuffledCards","sort","Math","random","id","useEffect","prevCards","resetTurn","setTimeout","axios","get","then","prevTurns","Icon","links","link","url","target","rel","icon","iconName","LINKS","name","faGithubSquare","Footer","LOGIN","gql","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","a","variables","mutationResponse","handleChange","value","onSubmit","htmlFor","placeholder","type","onChange","Signup","addUser","username","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23b35fe9.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\n\nfunction Header() {\n\n    const logout = event => {\n        event.preventDefault();\n        Auth.logout();\n    };\n\n    return (\n        <header className=\"header\">\n            <div>\n                <nav>\n                    <Link to=\"/\">\n                        <img className=\"logo\"\n                            src=\"https://fontmeme.com/permalink/220410/ac11cb84f10a947099bf1c1c6ce07dcb.png\"\n                            alt=\"BreakingCode-logo\"\n                        />\n                    </Link>\n                    <div className=\"header-right\">\n                        <Link to=\"/\">About</Link>\n                        <Link to=\"/game\">Game</Link>\n\n                        {Auth.loggedIn() ? (\n                            <>\n                                <Link to=\"/game\"></Link>\n                                <a href=\"/\" onClick={logout}>\n                                    Logout\n                                </a>\n                            </>\n                        ) : (\n                            <>\n                                <Link to=\"/login\">Login</Link>\n                                <Link to=\"/signup\">Signup</Link>\n                            </>\n                        )}\n                    </div>\n                </nav>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nfunction About() {\n\n    return (\n        \n        <section class=\"hero\">\n            <div class=\"about-container\">\n                {/* about section */}\n                <aside className='about'>\n                    <h1>\n                        Welcome to Breaking Code! <br />\n                    </h1>\n                    <p>\n                        If you are either getting ready to do a technical web development interview for the first time, <br />\n                        or even the 100th, then Breaking Code is the place to test your coding knowledge! <br />\n                        {/* <br />\n                    <br />\n                    Your Goal is to match the correct square to the question given and for each correct question <br />\n                    the user will receive points and at the end of the quiz see how they did out of array of questions. <br />\n                    You will also be able to share your score!\n                    <br />\n                    <br />\n                    Future developments will allow users to test through several different quiz types as well as study <br />\n                    with flashcards on a user dashboard depending on the desired interview topic.\n                    Feel free to Contact us if you have any questions, request, or suggestions for future development! */}\n                    </p>\n                </aside>\n            </div>\n        </section>\n    );\n}\n\nexport default About;","export default __webpack_public_path__ + \"static/media/banner.cd9488f5.png\";","// // js and html for the memory game\n// import React from 'react'\n// import Cover from '../assets/banner.png'\n// import Logo from '../assets/logo.png'\n// import { QUERY_CARD } from '../utils/queries'\n// import { useQuery } from '@apollo/client'\n// // import ReactCardFlip from 'react-card-flip';\n\n// export default function singleCard( {card, handleChoice, flipped, disabled }) {\n\n//     const handleClick = () => {\n//         if (!disabled) {\n//             handleChoice(card)\n//         }\n//     }\n\n//     const {loading, data} = useQuery(QUERY_CARD)\n//     console.log(loading, data)\n//   return (\n    \n//     <div className='card'>\n//         <div className={flipped ? \"flipped\" : \"\"}>\n//             <img className='front' src={Logo} alt=\"card front\"/>\n//             <img \n//                 className='back' \n//                 src={Cover} \n//                 onClick={handleClick} \n//                 alt=\"back cover\"\n//             />\n//         </div>\n//     </div>\n//   )\n// }\n\n// js and html for the memory game\nimport React from 'react'\nimport Cover from '../assets/banner.png'\n// import ReactCardFlip from 'react-card-flip';\n\nexport default function singleCard( {card, handleChoice, flipped, disabled, data}) {\n    console.log(data)\n\n    const handleClick = () => {\n        if (!disabled) {\n            handleChoice(card)\n        }\n    }\n\n    const setCards = () => {\n        data.map(info => {\n            if (info.pair_id === info.pair_id) {\n                console.log(info.content)\n            }\n       })\n    }\n\n    setCards()\n\n  return (\n    <div className='card' onClick={handleClick}>\n        <div className={flipped ? \"flipped\" : \"\"}>\n            {data.map(cardContent => {\n                return (<>\n                    <p className='front' alt=\"card front\" > answer </p>\n                    <p className='back'> question </p>\n                </>)\n\n            }\n                )}\n        </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport SingleCard from '../components/SingleCard';\nimport axios from 'axios';\nimport '../index.css'\n// import Auth from '../utils/auth';\n\n\nconst cardImages = [\n  { \"src\": \"/img/sample1.jpeg\", matched: false },\n  { \"src\": \"/img/sample2.jpeg\", matched: false },\n  { \"src\": \"/img/sample3.jpeg\", matched: false },\n  { \"src\": \"/img/sample4.jpeg\", matched: false },\n  { \"src\": \"/img/sample5.jpeg\", matched: false },\n  { \"src\": \"/img/sample6.jpeg\", matched: false }\n]\n\n// const cardSet = () => {\n//   const [cards, setCards] = useState(\"\")\n// }\n\n// const cardData = async () => {\n\n// }\n\nfunction Game() {\n  \n  //Store cards\n  const [cards, setCards] = useState([])\n  // User turns\n  const [turns, setTurns] = useState(0)\n  // compare cards to see if it matches\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n  const [data, setData] = useState([])\n  \n  // Shuffle cards\n  const shuffleCards = () => {\n    // duplicate cards once\n    const shuffledCards = [...cardImages, ...cardImages]\n      // shuffle cards using sort method\n      .sort(() => Math.random() - 0.5)\n      // apply random id\n      .map((card) => ({ ...card, id: Math.random() }))\n\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  // async function getData() {\n  //   const res = await fetch('http://localhost:3001/api/cards')\n  //   const data = await res.json()\n\n  //   return data;\n  // }\n\n  // console.log(cards, turns)\n\n  //handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n    // console.log(card)\n  }\n\n  // compare two selected cards \n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n\n      if (choiceOne.src === choiceTwo.src) {\n        console.log('The cards match!')\n\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true }\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n        console.log('The cards do not match!')\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/cards').then(data => setData(data.data))\n  }, [])\n\n  // console.log(cards)\n\n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n\n\n  // start game automatically \n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  // const loggedIn = Auth.loggedIn();\n\n  return (\n    <div className=\"game-cards\">\n      <h1 className='game-title'> Breaking Code </h1>\n      <button onClick={shuffleCards}>\n        <span></span>\n        <span></span>\n        <span></span> New Game\n      </button>\n\n      <div className='card-grid'>\n        {cards.map(card => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            data={data}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}>\n          </SingleCard>\n        ))}\n      </div>\n      <p className='turns'> Turns: {turns} </p>\n    </div>\n  );\n}\n\nexport default Game;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\n// contact info in footer (github/linkedin)\nfunction Icon({ links }) {\n\treturn (\n\t\t<div>\n\t\t\t{links.map(link => (\n\t\t\t\t<span key={`${link.icon}-span`}>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={link.url}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noreferrer'\n\t\t\t\t\t\tclassName='icon-link link'\n\t\t\t\t\t>\n\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\tclassName='icons'\n\t\t\t\t\t\t\tkey={`${link.icon}-icon`}\n\t\t\t\t\t\t\ticon={link.iconName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Icon;","import {\n\tfaGithubSquare,\n} from '@fortawesome/free-brands-svg-icons';\n\nexport const LINKS = [\n\t{\n\t\tid: 'link-1',\n\t\tname: 'GitHub',\n\t\turl: 'https://github.com/barrantesc/BreakingCode',\n\t\ticon: 'github-square',\n\t\ticonName: faGithubSquare,\n\t},\n];","import Icon from './icon';\nimport React from 'react';\nimport { LINKS } from '../utils/footerLinks';\n\nfunction Footer() {\n\treturn (\n\t\t<footer className='footer'>\n\t\t\t<div>\n\t\t\t<Icon links={LINKS}></Icon>\n\t\t\t<p> © 2022 Ashley Park, Connie Barrantes, Melany Pietrowsk, Trevor Long</p>\n\t\t\t</div>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;","import { gql } from '@apollo/client';\n\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($username: String!, $email: String!, $password: String!) {\n        addUser(username: $username, email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }    \n    }\n`; ","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"login-form\">\n      <Link to=\"/signup\" className='link'>← Go to Signup</Link>\n\n      <h2 className='login-title'>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <br />\n          <input\n            placeholder=\"email\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor=\"pwd\">Password:</label>\n          <br />\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        {error ? (\n          <div>\n            <p className=\"error-text\">**The provided credentials are incorrect!</p>\n          </div>\n        ) : null}\n        <br />\n\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        username: formState.username,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"signup-form\">\n      <Link to=\"/login\" className='link'>← Go to Login</Link>\n\n      <h2 className='signup-title'>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <br />\n          <input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <br />\n          <input\n            placeholder=\"email\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor=\"pwd\">Password:</label>\n          <br />\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes,  } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Header from './components/header';\nimport About from '../src/pages/about';\nimport Game from '../src/pages/game';\n// import Scoreboard from '../src/pages/scoreboard';\nimport Footer from './components/footer';\nimport Login from '../src/pages/login';\nimport Signup from '../src/pages/signup';\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Header />\n          <Routes>\n            <Route  exact path=\"/\" element={<About />} />\n            <Route  exact path=\"/game\" element={<Game />} />\n            <Route  exact path=\"/login\" element={<Login />} />\n            <Route  exact path=\"/signup\" element={<Signup />} />\n          </Routes>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}